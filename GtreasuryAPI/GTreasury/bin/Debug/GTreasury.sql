/*
Deployment script for GTreasury

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "GTreasury"
:setvar DefaultFilePrefix "GTreasury"
:setvar DefaultDataPath "C:\Users\Jonathan Ramirez\AppData\Local\Microsoft\VisualStudio\SSDT\GTreasury"
:setvar DefaultLogPath "C:\Users\Jonathan Ramirez\AppData\Local\Microsoft\VisualStudio\SSDT\GTreasury"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE,
                DISABLE_BROKER 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367)) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Creating Table [dbo].[tblClients]...';


GO
CREATE TABLE [dbo].[tblClients] (
    [intClientId]         INT          IDENTITY (1, 1) NOT NULL,
    [strClientName]       VARCHAR (50) NOT NULL,
    [strClientMiddleName] VARCHAR (3)  NOT NULL,
    [strClientSurname]    VARCHAR (50) NOT NULL,
    [dtmClientBirthDate]  DATE         NOT NULL,
    CONSTRAINT [PK_tblClients] PRIMARY KEY CLUSTERED ([intClientId] ASC)
);


GO
PRINT N'Creating Table [dbo].[tblLoans]...';


GO
CREATE TABLE [dbo].[tblLoans] (
    [intLoanId]        INT        IDENTITY (1, 1) NOT NULL,
    [dblLoanAmont]     FLOAT (53) NULL,
    [dtmLoanStartDate] DATE       NULL,
    [intLoanTerm]      INT        NULL,
    [dblLoadFixedRate] INT        NULL,
    [intClientId]      INT        NOT NULL,
    CONSTRAINT [PK_tblLoans] PRIMARY KEY CLUSTERED ([intLoanId] ASC)
);


GO
PRINT N'Creating Foreign Key [dbo].[FK_tblLoans_tblClients]...';


GO
ALTER TABLE [dbo].[tblLoans] WITH NOCHECK
    ADD CONSTRAINT [FK_tblLoans_tblClients] FOREIGN KEY ([intClientId]) REFERENCES [dbo].[tblClients] ([intClientId]);


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[tblLoans] WITH CHECK CHECK CONSTRAINT [FK_tblLoans_tblClients];


GO
PRINT N'Update complete.';


GO
